变量分为可变与不可变

不可变(整型 str 浮点)  #元组他们说是我觉得不是
可变(列表 元组 字典 集合)

初次使用变量赋值 只要是第一次使用的值  python 在内存中创建对象 并指向变量 不管是可变不可变都是
第二次使用变量赋值(重点)
不可变变量(只能生成不能更改)
注意python整型的-100,-101 为特殊情况 基本没有差别可以忽略
你无法修改它在内存的值
且对变量重新赋值后它回回到原先的内存地址
例如
a=1
print(id(a))
a=2
a=1
print(id(a))
两次地址值是一样的
你无法访问a指向的1的内存把1改成2
只要生成内存地址就再也不变了  1永远对应一个地址
所以
b=1
c=[b]   #此时b的地址为1的内存地址
b=3     #又把b的标签厮下来 贴到了3上  此时b为3的内存地址
print(c)#故不变

可变变量
a=[1]        #开辟空间生成[1] 
print(id(a))
a=2          #把标签撕下来指向2,此时再也无法找回[1]的地址 除非之前还有变量指向a, 例如b=a
a=[1]        #故又开辟空间生成[1]
print(id(a)) #两次地址值是不一样的
当我们访问可变变量并修改时  我们可以访问a[0]表示访问第一个元素存储的内存地址等于即1的内存地址,我们无法修改1 所以当a[0]=2 并不是把1变成2,而是修改第一个元素的内存地址将其指向2
总结一句话
第一次生成新值此时的变量代表该值的地址
而后的a=b都是复制地址
当a=某某某都为新值地址或 复制地址(把a撕下贴到其他对象上)
